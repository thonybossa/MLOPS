version: '3.8'

services:

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: Base_de_Datos
      MYSQL_USER: ab
      MYSQL_PASSWORD: ab
    ports:
      - "8082:3306"
    volumes:
      - mysql-data-volume:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - network2

  admin:
    image: phpmyadmin/phpmyadmin
    restart: always
    depends_on:
      - mysql
    ports:
      - 8081:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    networks: 
      - network2

  minio:
    container_name: Minio
    command: server /data --console-address ":8089"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    image: quay.io/minio/minio:latest
    ports:
      - '8088:8088'
      - '8089:8089'
    volumes:
      - ./minio_data:/data
    restart: unless-stopped
    networks:
      - network2

  fastapi:
    image: thonybossa/proyeto3_mlops:fastapi
    container_name: fastapi
    ports:
      - '8085:8085'
    volumes:
      - ./docker/fastapi/api/main.py:/main.py
    restart: always
    networks:
      - network2

  jupyter:
    image: thonybossa/proyeto3_mlops:jupyter
    container_name: jupyter
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      JUPYTER_TOKEN: "token"
    ports:
      - "8086:8086"
    restart: always
    volumes:
    - ./docker/jupyter:/jupyter_code
    stdin_open: true
    tty: true
    networks:
      - network2

  streamlit:
    image: thonybossa/proyeto3_mlops:streamlit
    container_name: streamlit
    ports:
      - "8087:8087"
    restart: always
    networks:
      - network2

volumes:
  postgres-db-volume:
  mysql-data-volume:
  minio_data:

networks:
  network2:
    name: proyecto_3_default
    external: true


